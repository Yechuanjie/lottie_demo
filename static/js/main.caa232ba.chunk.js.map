{"version":3,"sources":["assets/images/start.svg","assets/images/pause.svg","assets/images/fast-forward.svg","assets/lottieFiles/lottieInfo.ts","components/pagehead/pagehead.tsx","components/list/list.tsx","pages/index/index.tsx","pages/about/about.tsx","pages/detail/detail.tsx","pages/404/404.tsx","pages/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","resource","name","url","lotties","Array","length","lottieList","from","map","item","index","id","source","PageHead","react_default","a","createElement","className","react_router_dom","to","List","list","key","pathname","search","queryString","stringify","Index","pagehead_pagehead","components_list_list","onClick","window","open","About","Detail","props","_ref","parse","location","_useState","useState","lottieSourceUrl","Object","slicedToArray","_useState3","_useState4","isLoading","setisLoading","loadResource","_ref2","asyncToGenerator","regenerator_default","mark","_callee","sourceurl","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","_useState5","_useState6","anim","setAnim","_useState7","_useState8","nowFrame","setnowFrame","isUnmounted","useRef","init","useCallback","Promise","resolve","initLottieAnimation","_ref3","_callee2","animationData","element","lottieObject","_context2","document","querySelector","lottie","loadAnimation","container","renderer","loop","autoplay","_x2","String","then","_ref4","_callee3","_context3","_x3","initWithEvent","res","addEventListener","handler","totalFrames","removeEventListener","useEffect","current","i","Math","floor","currentTime","_useState9","_useState10","isPlay","setPlay","_useState11","_useState12","speed","setspeed","_useState13","_useState14","duration","setduration","_useState15","_useState16","frames","setframes","getDuration","type","_useState17","_useState18","direction","setdirection","playSegments","arr","_useState19","_useState20","isdestory","setisdestory","_useState21","_useState22","showControl","setshowControl","e","preventDefault","concat","pause","play","src","pauseIcon","startIcon","alt","nowspeed","setSpeed","speedIcon","dr","setDirection","half","console","info","goToAndPlay","goToAndStop","destroy","NotFound","App","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","pages_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.caa232ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/start.46c2be8f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.7ceaad2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/fast-forward.9c92c787.svg\";","const resource = [\n  {\n    name: \"施工\",\n    url: \"https://assets1.lottiefiles.com/packages/lf20_BXafZO.json\",\n  },\n  {\n    name: \"喝彩\",\n    url: \"https://assets10.lottiefiles.com/packages/lf20_mHMuHN.json\",\n  },\n  {\n    name: \"秋千\",\n    url: \"https://assets2.lottiefiles.com/packages/lf20_1pTi71.json\",\n  },\n  {\n    name: \"挖土\",\n    url: \"https://assets1.lottiefiles.com/packages/lf20_hwCzAN.json\",\n  },\n  {\n    name: \"旋转\",\n    url: \"https://assets7.lottiefiles.com/packages/lf20_zbzK2r.json\",\n  },\n  {\n    name: \"果汁\",\n    url: \"https://assets1.lottiefiles.com/datafiles/AembVTvov5PkTSJ/data.json\",\n  },\n];\n\nconst lotties: Array<Lottie> = new Array<Lottie>(resource.length);\nconst arr = Array.from(lotties);\nlet lottieList = arr.map((item, index) => {\n  return {\n    id: index + 1,\n    name: resource[index].name,\n    source: resource[index].url,\n  };\n});\nexport default lottieList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './pagehead.scss';\n\nconst PageHead: React.FC = function () {\n  return (\n    <nav className=\"header\">\n      <Link to=\"/\" >Lottie Demo</Link>\n      {/* <Link to=\"/about\">关于</Link> */}\n    </nav>\n  );\n}\n\nexport default PageHead;","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport \"./list.scss\";\n\nconst List: FC<Lotties> = (list) => {\n  const lotties = list.lotties;\n  return (\n    <div>\n      <ul>\n        {lotties.map((item) => (\n          <li key={item.id}>\n            <Link\n              to={{\n                pathname: `/detail`,\n                search: queryString.stringify(item),\n              }}\n            >\n              {item.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default List;\n","import React from \"react\";\nimport \"./index.scss\";\nimport lottieList from \"../../assets//lottieFiles/lottieInfo\";\n\nimport PageHead from \"../../components/pagehead/pagehead\";\nimport List from \"../../components/list/list\";\n\nconst Index: React.FC = () => {\n  return (\n    <div className=\"index_page\">\n      <PageHead></PageHead>\n      <List lotties={lottieList}></List>\n\n      <div\n        className=\"tip\"\n        onClick={() => {\n          window.open(\"https://lottiefiles.com/featured\");\n        }}\n      >\n        获取最新Lottie动画\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n","import React from 'react';\n\nimport PageHead from '../../components/pagehead/pagehead';\n\nconst About: React.FC = function() {\n  return(\n    <div>\n      <PageHead></PageHead>\n    </div>\n  );\n}\n\nexport default About;","import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport lottie, { AnimationItem } from \"lottie-web\";\nimport queryString from \"query-string\";\n\nimport startIcon from \"../../assets/images/start.svg\";\nimport pauseIcon from \"../../assets/images/pause.svg\";\nimport speedIcon from \"../../assets/images/fast-forward.svg\";\n\nimport \"./detail.scss\";\n\ninterface IProps {\n  [props: string]: any;\n}\n\ntype AnimationRealItem = AnimationItem & {\n  totalFrames: number;\n};\n\nconst Detail: React.FC<IProps> = (props) => {\n  const parsed = queryString.parse(props.location.search);\n  const { name, source } = parsed as {\n    name: string;\n    source: string;\n  };\n  const [lottieSourceUrl] = useState(source);\n  // const [totalFrame, setTotalFrame] = useState(0);\n\n  const [isLoading, setisLoading] = useState(false);\n  /**\n   * 加载远程json文件\n   * @param {string} sourceurl\n   * @returns 返回json对象\n   */\n  const loadResource = async (sourceurl: string) => {\n    setisLoading(true);\n    const response = await fetch(sourceurl);\n    const data = await response.json();\n    setisLoading(false);\n    return data;\n  };\n\n  const [anim, setAnim] = useState({} as AnimationRealItem);\n  const [nowFrame, setnowFrame] = useState(0);\n\n  const isUnmounted = useRef(false);\n\n  const init = useCallback((source: string): Promise<AnimationRealItem> => {\n    return new Promise((resolve) => {\n      /**\n       *初始化动画\n       * @param {JSON} animationData\n       */\n      const initLottieAnimation = async (animationData: JSON) => {\n        const element = document.querySelector(\".lottie_wrap\");\n        const lottieObject = (await lottie.loadAnimation({\n          container: element as Element, // the dom element that will contain the animation\n          renderer: \"svg\",\n          name: name as string,\n          loop: true,\n          autoplay: true,\n          animationData,\n        })) as AnimationRealItem;\n        return lottieObject;\n      };\n      loadResource(String(source)).then(async (json) => {\n        const item = await initLottieAnimation(json);\n        resolve(item);\n      });\n    });\n  }, [name]);\n\n  const initWithEvent = useCallback(\n    (source: string) => {\n      let item = {} as AnimationRealItem;\n      init(source).then((res) => {\n        item = res;\n        res.addEventListener(\"enterFrame\", handler);\n        setAnim(res);\n      });\n      return () => {\n        item.totalFrames > 0 && item.removeEventListener(\"enterFrame\", handler);\n      };\n    },\n    [init]\n  );\n\n  useEffect(() => {\n    if (lottieSourceUrl) {\n      initWithEvent(lottieSourceUrl);\n    }\n    return () => {\n      isUnmounted.current = true;\n    };\n  }, [lottieSourceUrl, initWithEvent]);\n\n  const handler = (i: { currentTime: number }) => {\n    if (!isUnmounted.current) {\n      setnowFrame(Math.floor(i.currentTime));\n    }\n  };\n\n  // 开始|暂停动画\n  const [isPlay, setPlay] = useState(true);\n  const togglePlay = () => {\n    isPlay ? anim.pause() : anim.play();\n    setPlay(!isPlay);\n  };\n\n  // 设置速度\n  const [speed, setspeed] = useState(1);\n  const changeSpeed = () => {\n    let nowspeed = speed;\n    if (nowspeed < 2.5) {\n      nowspeed += 0.5;\n    } else {\n      nowspeed = 1;\n    }\n    setspeed(nowspeed);\n    anim.setSpeed(nowspeed);\n  };\n\n  // getDuration\n  const [duration, setduration] = useState(0);\n  const [frames, setframes] = useState(0);\n  const getDuration = (type?: boolean) => {\n    const a = anim.getDuration(type);\n    type ? setframes(a) : setduration(a);\n  };\n\n  //setdirection\n  const [direction, setdirection] = useState(1);\n  const setDirection = () => {\n    let dr: 1 | -1 = direction > 0 ? -1 : 1;\n    setdirection(dr);\n    anim.stop();\n    anim.setDirection(dr);\n    anim.play();\n    setPlay(true);\n    setnowFrame(0);\n  };\n\n  //goToAndPlay\n  const goToAndPlay = () => {\n    const half = Math.floor(anim.totalFrames / 2);\n    console.info(half);\n    setnowFrame(half);\n    setPlay(true);\n    anim.goToAndPlay(half, true);\n  };\n\n  //goToAndPlay\n  const goToAndStop = () => {\n    const half = Math.floor(anim.totalFrames / 2);\n    console.info(half);\n    setnowFrame(half);\n    setPlay(false);\n    anim.goToAndStop(half, true);\n  };\n\n  //playSegments\n  const playSegments = (arr: Array<any>, type: boolean) => {\n    anim.stop();\n    anim.playSegments(arr, type);\n    setPlay(true);\n    setframes(10);\n    getDuration(true);\n    getDuration(false);\n  };\n  const [isdestory, setisdestory] = useState(false);\n  const destroyAnim = () => {\n    if (isdestory) {\n      initWithEvent(source);\n    } else {\n      anim.destroy();\n    }\n    setisdestory(!isdestory);\n  };\n\n  const [showControl, setshowControl] = useState(false);\n  const toggleControl = (e: any) => {\n    e.preventDefault();\n    setshowControl(!showControl);\n  };\n\n  return (\n    <div className=\"detail_page\">\n      <div className=\"lottie_wrap\" onClick={toggleControl}></div>\n      {isLoading && (\n        <div className=\"loading-mask\">\n          <div className=\"loading-round\"></div>\n          <div>加载中...</div>\n        </div>\n      )}\n      <div className=\"tip\">点击图层操控动画</div>\n      {anim && (\n        <div className={`control ${showControl ? \"show\" : \"\"}`}>\n          <div className=\"play_wrap\">\n            <img\n              className=\"play\"\n              onClick={togglePlay}\n              src={isPlay ? pauseIcon : startIcon}\n              alt=\"playcontrol\"\n            />\n            <span>\n              {nowFrame} / {anim.totalFrames}\n            </span>\n          </div>\n          <div className=\"speed_wrap\" onClick={changeSpeed}>\n            <div className=\"speed_icon\">\n              <img src={speedIcon} alt=\"\" />\n              <span>动画速度</span>\n            </div>\n            <span className=\"speed\">{speed}x</span>\n          </div>\n          <div className=\"speed_wrap\" onClick={() => getDuration(false)}>\n            <span>\n              {(duration && `动画时间：${duration} 秒`) || \"点击获取动画时间\"}\n            </span>\n          </div>\n          <div className=\"speed_wrap\" onClick={() => getDuration(true)}>\n            <span>\n              {(frames && `动画总帧数：${frames} 帧`) || \"点击获取动画帧数\"}\n            </span>\n          </div>\n          <div className=\"speed_wrap\" onClick={setDirection}>\n            <span>\n              {`点击改变动画方向  当前` + (direction < 0 ? \"反向\" : \"正向\")}\n            </span>\n          </div>\n          <div className=\"speed_wrap\" onClick={goToAndPlay}>\n            <span>{`点击前进到动画的1/2帧 并继续播放`}</span>\n          </div>\n          <div className=\"speed_wrap\" onClick={goToAndStop}>\n            <span>{`点击前进到动画的1/2帧 并停止播放`}</span>\n          </div>\n          <div\n            className=\"speed_wrap\"\n            onClick={() => playSegments([0, 10], false)}\n          >\n            <span>{`点击播放第0帧到第10帧动画 等待当前动画完成后执行`}</span>\n          </div>\n          <div\n            className=\"speed_wrap\"\n            onClick={() => playSegments([0, 10], true)}\n          >\n            <span>{`点击播放第0帧到第10帧动画 立即执行`}</span>\n          </div>\n          <div className=\"speed_wrap\" onClick={destroyAnim}>\n            <span>{isdestory ? `重建动画` : `销毁动画`}</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Detail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound: React.FC<any> = function () {\n  return (\n    <div>\n      <h3>Not found</h3>\n      <Link to=\"/\">回到首页</Link>\n    </div>\n  )\n}\nexport default NotFound;","import React from 'react';\nimport { Route, HashRouter, Switch } from 'react-router-dom'\nimport Index from './index/index';\nimport About from './about/about';\nimport Detail from './detail/detail';\nimport NotFound from './404/404';\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Index} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/detail\" component={Detail} />\n        {/* 404 */}\n        <Route component={NotFound}></Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n// useContext(App);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './pages/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}